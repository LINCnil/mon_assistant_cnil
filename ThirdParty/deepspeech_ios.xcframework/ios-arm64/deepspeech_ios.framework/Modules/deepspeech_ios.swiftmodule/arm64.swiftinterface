// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios13.5 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name deepspeech_ios
import Swift
@_exported import deepspeech_ios
import deepspeech_ios.libdeepspeech_Private
public enum DeepSpeechError : Swift.Error {
  case noModel(errorCode: Swift.Int32)
  case invalidAlphabet(errorCode: Swift.Int32)
  case invalidShape(errorCode: Swift.Int32)
  case invalidScorer(errorCode: Swift.Int32)
  case modelIncompatible(errorCode: Swift.Int32)
  case scorerNotEnabled(errorCode: Swift.Int32)
  case scorerUnreadable(errorCode: Swift.Int32)
  case scorerInvalidLm(errorCode: Swift.Int32)
  case scorerNoTrie(errorCode: Swift.Int32)
  case scorerInvalidTrie(errorCode: Swift.Int32)
  case scorerVersionMismatch(errorCode: Swift.Int32)
  case failInitMmap(errorCode: Swift.Int32)
  case failInitSess(errorCode: Swift.Int32)
  case failInterpreter(errorCode: Swift.Int32)
  case failRunSess(errorCode: Swift.Int32)
  case failCreateStream(errorCode: Swift.Int32)
  case failReadProtobuf(errorCode: Swift.Int32)
  case failCreateSess(errorCode: Swift.Int32)
  case failCreateModel(errorCode: Swift.Int32)
  case invalidErrorCode(errorCode: Swift.Int32)
}
extension DeepSpeechError : Foundation.LocalizedError {
  public var errorDescription: Swift.String? {
    get
  }
}
public struct DeepSpeechTokenMetadata {
}
public struct DeepSpeechCandidateTranscript {
}
public struct DeepSpeechMetadata {
}
@_hasMissingDesignatedInitializers public class DeepSpeechStream {
  @objc deinit
  public func feedAudioContent(buffer: Swift.Array<Swift.Int16>)
  public func feedAudioContent(buffer: Swift.UnsafeBufferPointer<Swift.Int16>)
  public func intermediateDecode() -> Swift.String
  public func intermediateDecodeWithMetadata(numResults: Swift.Int) -> deepspeech_ios.DeepSpeechMetadata
  public func finishStream(pathToSaveAudio: Swift.String) -> Swift.String
  public func finishStreamWithMetadata(numResults: Swift.Int) -> deepspeech_ios.DeepSpeechMetadata
}
public class DeepSpeechModel {
  public init(modelPath: Swift.String) throws
  @objc deinit
  public func getBeamWidth() -> Swift.Int
  public func setBeamWidth(beamWidth: Swift.Int) throws
  public var sampleRate: Swift.Int {
    get
  }
  public func enableExternalScorer(scorerPath: Swift.String) throws
  public func disableExternalScorer() throws
  public func setScorerAlphaBeta(alpha: Swift.Float, beta: Swift.Float) throws
  public func speechToText(buffer: Swift.Array<Swift.Int16>) -> Swift.String
  public func speechToText(buffer: Swift.UnsafeBufferPointer<Swift.Int16>) -> Swift.String
  public func speechToTextWithMetadata(buffer: Swift.Array<Swift.Int16>, numResults: Swift.Int) -> deepspeech_ios.DeepSpeechMetadata
  public func speechToTextWithMetadata(buffer: Swift.UnsafeBufferPointer<Swift.Int16>, numResults: Swift.Int) -> deepspeech_ios.DeepSpeechMetadata
  public func createStream() throws -> deepspeech_ios.DeepSpeechStream
}
public func DeepSpeechVersion() -> Swift.String
